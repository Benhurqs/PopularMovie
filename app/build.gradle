apply plugin: 'com.android.application'
apply plugin: 'realm-android'
apply from: "$project.rootDir/tools/script-git-version.gradle"
apply from: "$project.rootDir/tools/script-findbugs.gradle"
apply from: "$project.rootDir/tools/script-lint.gradle"
apply from: "$project.rootDir/tools/script-pmd.gradle"
apply from: "$project.rootDir/tools/script-java-code-coverage.gradle"

def props = new Properties()
file("../local.properties").withInputStream { props.load(it) }

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.1"
    defaultConfig {
        applicationId "benhurqs.com.popularmovies"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "BASE_IMAGE_URL", "\"http://image.tmdb.org/t/p/w780//\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
        }
    }

    productFlavors {
        mock {
            applicationIdSuffix = ".mock"
            versionCode gitVersionCodeTime
            versionName gitVersionName
        }
        prod {
            buildConfigField "String", "API_KEY", props.getProperty("api_key") // Add HERE you API_KEY
            buildConfigField "String", "API_URL", "\"http://api.themoviedb.org/3/\""
            versionCode gitVersionCode
            versionName gitVersionName
        }
    }

    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if(variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('mock')) {
            variant.setIgnore(true);
        }
    }

    sourceSets {
        main {
            main {
                file('src/main/res-screen')
                        .listFiles()
                        .each { res.srcDirs += it.path }
            }
        }
    }

    dataBinding {
        enabled = true
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.1.1'
    testCompile 'junit:junit:4.12'
    compile 'com.google.guava:guava:14.0.1' // guava 14.0.1


    //Material Design
    compile 'com.android.support:design:25.1.1'
    compile 'com.android.support:cardview-v7:25.1.1'
    compile 'com.android.support:recyclerview-v7:25.1.1'


    //Retrofit
    compile 'com.squareup.retrofit2:retrofit:2.0.2'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.2'
    compile 'com.squareup.retrofit2:converter-gson:2.0.0'

    //RxAndroid
    //RxAndroid
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'io.reactivex:rxjava:1.1.6'

    //Gson
    compile 'com.google.code.gson:gson:2.4'
    compile 'com.google.android.gms:play-services-appindexing:8.4.0'

    //Glide
    compile 'com.github.bumptech.glide:glide:3.7.0'

    //Circle indicator
    compile 'me.relex:circleindicator:1.2.2@aar'
}
